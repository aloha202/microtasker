CREATE TABLE app_error (id BIGINT AUTO_INCREMENT, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE banned_ip (id BIGINT AUTO_INCREMENT, ip VARCHAR(15) NOT NULL, reason VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE blog_post (id BIGINT AUTO_INCREMENT, name VARCHAR(255) NOT NULL, date DATE NOT NULL, image VARCHAR(255), brief TEXT, extra TEXT, text LONGTEXT, is_published TINYINT(1) DEFAULT '0', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, meta_title VARCHAR(255), meta_description VARCHAR(255), meta_keywords VARCHAR(255), slug VARCHAR(255), UNIQUE INDEX blog_post_sluggable_idx (slug), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE blog_post2_blog_tag (blog_post_id BIGINT, blog_tag_id BIGINT, PRIMARY KEY(blog_post_id, blog_tag_id)) ENGINE = INNODB;
CREATE TABLE blog_post_comment (id BIGINT AUTO_INCREMENT, blog_post_id BIGINT NOT NULL, username VARCHAR(255) NOT NULL, comment TEXT, is_published TINYINT(1) DEFAULT '0', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX blog_post_id_idx (blog_post_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE blog_tag (id BIGINT AUTO_INCREMENT, name VARCHAR(255) NOT NULL UNIQUE, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE cms_language (id BIGINT AUTO_INCREMENT, name VARCHAR(5) NOT NULL UNIQUE, is_active TINYINT(1) DEFAULT '1', PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE cms_module (id BIGINT AUTO_INCREMENT, name VARCHAR(255) NOT NULL UNIQUE, is_active TINYINT(1) DEFAULT '1', model VARCHAR(255), model_sitemap_callback VARCHAR(255), show_route VARCHAR(255), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE cms_runtime_error (id BIGINT AUTO_INCREMENT, description TEXT, url TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE config (id BIGINT AUTO_INCREMENT, name VARCHAR(255) NOT NULL, title VARCHAR(255), value TEXT, help TEXT, display VARCHAR(255), section VARCHAR(255) DEFAULT 'settings', type VARCHAR(255) DEFAULT 'text', type_enum_values TEXT, use_wysiwyg TINYINT(1) DEFAULT '0', is_localized TINYINT(1) DEFAULT '0', PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE default_image (id BIGINT AUTO_INCREMENT, name VARCHAR(255), title VARCHAR(255), image VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE email_error (id BIGINT AUTO_INCREMENT, email_from VARCHAR(255), email_to VARCHAR(255), subject VARCHAR(255), body TEXT, cc VARCHAR(255), file VARCHAR(255), errmes TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE forgot_password (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, email VARCHAR(255) NOT NULL, hash VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE localization (id BIGINT AUTO_INCREMENT, model VARCHAR(64) NOT NULL, pk BIGINT NOT NULL, field VARCHAR(64) NOT NULL, ru TEXT, en TEXT, de TEXT, es TEXT, it TEXT, fr TEXT, pt TEXT, sv TEXT, fi TEXT, no TEXT, nl TEXT, pl TEXT, INDEX main_idx (model, pk, field), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE news (id BIGINT AUTO_INCREMENT, date DATE NOT NULL, title VARCHAR(255) NOT NULL, brief TEXT, content TEXT, image VARCHAR(255), slug VARCHAR(255), meta_title VARCHAR(255), meta_description VARCHAR(255), meta_keywords VARCHAR(255), UNIQUE INDEX news_sluggable_idx (slug), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE profile (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, first_name VARCHAR(255), last_name VARCHAR(255), image VARCHAR(255), dob DATE, email VARCHAR(255), phone VARCHAR(255), about TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, geo_lat VARCHAR(32), geo_lng VARCHAR(32), geo_country VARCHAR(32), geo_city VARCHAR(32), geo_address VARCHAR(255), geo_address_formatted VARCHAR(255), INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE redirect301 (id BIGINT AUTO_INCREMENT, url_from VARCHAR(255) NOT NULL UNIQUE, url_to VARCHAR(255) NOT NULL, is_active TINYINT(1) DEFAULT '1', comment TEXT, use_count BIGINT DEFAULT 0, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE site_event (id BIGINT AUTO_INCREMENT, type VARCHAR(255), description TEXT, admin_email TEXT, user_email TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, is_backend_viewed TINYINT(1) DEFAULT '0', PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE site_message (id BIGINT AUTO_INCREMENT, type VARCHAR(255), name VARCHAR(255) NOT NULL, phone_number VARCHAR(255), email VARCHAR(255), company_name VARCHAR(255), message TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, attach VARCHAR(255), attach_name VARCHAR(255), attach_mime VARCHAR(255), is_backend_viewed TINYINT(1) DEFAULT '0', PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE site_visit (id BIGINT AUTO_INCREMENT, ip_address VARCHAR(32), country VARCHAR(32), user_agent VARCHAR(255), user_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE site_visit_page (id BIGINT AUTO_INCREMENT, site_visit_id BIGINT NOT NULL, url VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX site_visit_id_idx (site_visit_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE social_bridge (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, email VARCHAR(64) NOT NULL, status VARCHAR(255) DEFAULT 'new', token VARCHAR(255), network VARCHAR(255), network_user_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE social_user (id BIGINT AUTO_INCREMENT, facebook_user_id DECIMAL(21, 2), facebook_user_info TEXT, vkontakte_user_id DECIMAL(21, 2), vkontakte_user_info TEXT, google_user_id DECIMAL(21, 2), google_user_info TEXT, mailru_user_id DECIMAL(21, 2), mailru_user_info TEXT, yandex_user_id DECIMAL(21, 2), yandex_user_info TEXT, twitter_user_id DECIMAL(21, 2), twitter_user_info TEXT, user_id BIGINT, email VARCHAR(255), INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE todo (id BIGINT AUTO_INCREMENT, name TEXT NOT NULL, status VARCHAR(255) DEFAULT 'open', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE user_settings (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, is_fillet_locked TINYINT(1) DEFAULT '0', is_fillet_lock_message_shown TINYINT(1) DEFAULT '0', INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE wiki (id BIGINT AUTO_INCREMENT, name VARCHAR(255) NOT NULL, content TEXT, sort_order BIGINT, is_published TINYINT(1) DEFAULT '0', PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_forgot_password (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, unique_key VARCHAR(255), expires_at DATETIME NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group_permission (group_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(group_id, permission_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_permission (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_remember_key (id BIGINT AUTO_INCREMENT, user_id BIGINT, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user (id BIGINT AUTO_INCREMENT, first_name VARCHAR(255), last_name VARCHAR(255), email_address VARCHAR(255) NOT NULL UNIQUE, username VARCHAR(128) NOT NULL UNIQUE, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), is_active TINYINT(1) DEFAULT '1', is_super_admin TINYINT(1) DEFAULT '0', last_login DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX is_active_idx_idx (is_active), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_group (user_id BIGINT, group_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, group_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_permission (user_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, permission_id)) ENGINE = INNODB;
ALTER TABLE blog_post2_blog_tag ADD CONSTRAINT blog_post2_blog_tag_blog_tag_id_blog_tag_id FOREIGN KEY (blog_tag_id) REFERENCES blog_tag(id) ON DELETE CASCADE;
ALTER TABLE blog_post2_blog_tag ADD CONSTRAINT blog_post2_blog_tag_blog_post_id_blog_post_id FOREIGN KEY (blog_post_id) REFERENCES blog_post(id) ON DELETE CASCADE;
ALTER TABLE blog_post_comment ADD CONSTRAINT blog_post_comment_blog_post_id_blog_post_id FOREIGN KEY (blog_post_id) REFERENCES blog_post(id) ON DELETE CASCADE;
ALTER TABLE forgot_password ADD CONSTRAINT forgot_password_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE profile ADD CONSTRAINT profile_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE site_visit ADD CONSTRAINT site_visit_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE SET NULL;
ALTER TABLE site_visit_page ADD CONSTRAINT site_visit_page_site_visit_id_site_visit_id FOREIGN KEY (site_visit_id) REFERENCES site_visit(id) ON DELETE CASCADE;
ALTER TABLE social_bridge ADD CONSTRAINT social_bridge_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE social_user ADD CONSTRAINT social_user_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE user_settings ADD CONSTRAINT user_settings_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_forgot_password ADD CONSTRAINT sf_guard_forgot_password_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_remember_key ADD CONSTRAINT sf_guard_remember_key_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
CREATE TABLE backlog (id BIGINT AUTO_INCREMENT, description VARCHAR(255) NOT NULL, user_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE email_template (id BIGINT AUTO_INCREMENT, name VARCHAR(255) NOT NULL, subject VARCHAR(255) NOT NULL, message TEXT, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE menu_item (id BIGINT AUTO_INCREMENT, name VARCHAR(255) NOT NULL, root_name VARCHAR(255), type VARCHAR(255) DEFAULT 'empty', page_id BIGINT, cms_module_id BIGINT, route VARCHAR(255), external TEXT, is_empty TINYINT(1) DEFAULT '1', is_auth TINYINT(1) DEFAULT '0', icon_class VARCHAR(32), root_id BIGINT, lft INT, rgt INT, level SMALLINT, INDEX page_id_idx (page_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE microtask (id BIGINT AUTO_INCREMENT, thread_id BIGINT, description TEXT NOT NULL, status VARCHAR(255) DEFAULT 'new', priority BIGINT UNSIGNED DEFAULT 1, is_blocker TINYINT(1) DEFAULT '0', is_reported TINYINT(1) DEFAULT '0', user_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX thread_id_idx (thread_id), INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE microtask_preset (id BIGINT AUTO_INCREMENT, description TEXT NOT NULL, type VARCHAR(255) DEFAULT 'down', user_id BIGINT, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE page (id BIGINT AUTO_INCREMENT, name VARCHAR(255) NOT NULL, content TEXT, is_module_page TINYINT(1) DEFAULT '0', module_name VARCHAR(255), is_content_editable TINYINT(1) DEFAULT '1', special_mark VARCHAR(255), is_redirect TINYINT(1) DEFAULT '0', redirect_route VARCHAR(32) DEFAULT '/', redirect_timeout SMALLINT DEFAULT 5, layout VARCHAR(32), slug VARCHAR(255), meta_title VARCHAR(255), meta_description VARCHAR(255), meta_keywords VARCHAR(255), UNIQUE INDEX page_sluggable_idx (slug), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE report (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, microtask_count BIGINT UNSIGNED, info TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE text_block (id BIGINT AUTO_INCREMENT, name VARCHAR(255) NOT NULL, title VARCHAR(255), text TEXT, application VARCHAR(32), module VARCHAR(32), INDEX section_index_idx (application, module), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE thread (id BIGINT AUTO_INCREMENT, name VARCHAR(255) NOT NULL, user_id BIGINT, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
ALTER TABLE backlog ADD CONSTRAINT backlog_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE menu_item ADD CONSTRAINT menu_item_page_id_page_id FOREIGN KEY (page_id) REFERENCES page(id) ON DELETE SET NULL;
ALTER TABLE microtask ADD CONSTRAINT microtask_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE microtask ADD CONSTRAINT microtask_thread_id_thread_id FOREIGN KEY (thread_id) REFERENCES thread(id) ON DELETE SET NULL;
ALTER TABLE microtask_preset ADD CONSTRAINT microtask_preset_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE report ADD CONSTRAINT report_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE thread ADD CONSTRAINT thread_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
