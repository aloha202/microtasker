<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('BlogPostComment', 'doctrine');

/**
 * BaseBlogPostComment
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $blog_post_id
 * @property string $username
 * @property string $comment
 * @property boolean $is_published
 * @property BlogPost $BlogPost
 * 
 * @method integer         getBlogPostId()   Returns the current record's "blog_post_id" value
 * @method string          getUsername()     Returns the current record's "username" value
 * @method string          getComment()      Returns the current record's "comment" value
 * @method boolean         getIsPublished()  Returns the current record's "is_published" value
 * @method BlogPost        getBlogPost()     Returns the current record's "BlogPost" value
 * @method BlogPostComment setBlogPostId()   Sets the current record's "blog_post_id" value
 * @method BlogPostComment setUsername()     Sets the current record's "username" value
 * @method BlogPostComment setComment()      Sets the current record's "comment" value
 * @method BlogPostComment setIsPublished()  Sets the current record's "is_published" value
 * @method BlogPostComment setBlogPost()     Sets the current record's "BlogPost" value
 * 
 * @package    cms
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseBlogPostComment extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('blog_post_comment');
        $this->hasColumn('blog_post_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('username', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('comment', 'string', null, array(
             'type' => 'string',
             'length' => '',
             ));
        $this->hasColumn('is_published', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('BlogPost', array(
             'local' => 'blog_post_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}