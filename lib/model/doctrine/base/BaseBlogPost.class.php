<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('BlogPost', 'doctrine');

/**
 * BaseBlogPost
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property date $date
 * @property string $image
 * @property string $brief
 * @property string $extra
 * @property clob $text
 * @property boolean $is_published
 * @property Doctrine_Collection $Tags
 * @property Doctrine_Collection $Comments
 * @property Doctrine_Collection $BlogPost2BlogTag
 * 
 * @method string              getName()             Returns the current record's "name" value
 * @method date                getDate()             Returns the current record's "date" value
 * @method string              getImage()            Returns the current record's "image" value
 * @method string              getBrief()            Returns the current record's "brief" value
 * @method string              getExtra()            Returns the current record's "extra" value
 * @method clob                getText()             Returns the current record's "text" value
 * @method boolean             getIsPublished()      Returns the current record's "is_published" value
 * @method Doctrine_Collection getTags()             Returns the current record's "Tags" collection
 * @method Doctrine_Collection getComments()         Returns the current record's "Comments" collection
 * @method Doctrine_Collection getBlogPost2BlogTag() Returns the current record's "BlogPost2BlogTag" collection
 * @method BlogPost            setName()             Sets the current record's "name" value
 * @method BlogPost            setDate()             Sets the current record's "date" value
 * @method BlogPost            setImage()            Sets the current record's "image" value
 * @method BlogPost            setBrief()            Sets the current record's "brief" value
 * @method BlogPost            setExtra()            Sets the current record's "extra" value
 * @method BlogPost            setText()             Sets the current record's "text" value
 * @method BlogPost            setIsPublished()      Sets the current record's "is_published" value
 * @method BlogPost            setTags()             Sets the current record's "Tags" collection
 * @method BlogPost            setComments()         Sets the current record's "Comments" collection
 * @method BlogPost            setBlogPost2BlogTag() Sets the current record's "BlogPost2BlogTag" collection
 * 
 * @package    cms
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseBlogPost extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('blog_post');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('date', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('image', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('brief', 'string', null, array(
             'type' => 'string',
             'length' => '',
             ));
        $this->hasColumn('extra', 'string', null, array(
             'type' => 'string',
             'length' => '',
             ));
        $this->hasColumn('text', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('is_published', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('BlogTag as Tags', array(
             'refClass' => 'BlogPost2BlogTag',
             'local' => 'blog_post_id',
             'foreign' => 'blog_tag_id'));

        $this->hasMany('BlogPostComment as Comments', array(
             'local' => 'id',
             'foreign' => 'blog_post_id'));

        $this->hasMany('BlogPost2BlogTag', array(
             'local' => 'id',
             'foreign' => 'blog_post_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $imagebuilder0 = new Doctrine_Template_ImageBuilder();
        $meta0 = new Doctrine_Template_Meta();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'unique' => true,
             'fields' => 
             array(
              0 => 'name',
             ),
             'canUpdate' => true,
             'builder' => 'ProjectHelper::slug_builder',
             ));
        $redirect3010 = new Doctrine_Template_Redirect301();
        $this->actAs($timestampable0);
        $this->actAs($imagebuilder0);
        $this->actAs($meta0);
        $this->actAs($sluggable0);
        $this->actAs($redirect3010);
    }
}