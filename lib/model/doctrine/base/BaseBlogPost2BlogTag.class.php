<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('BlogPost2BlogTag', 'doctrine');

/**
 * BaseBlogPost2BlogTag
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $blog_post_id
 * @property integer $blog_tag_id
 * @property BlogPost $BlogPost
 * @property BlogTag $BlogTag
 * 
 * @method integer          getBlogPostId()   Returns the current record's "blog_post_id" value
 * @method integer          getBlogTagId()    Returns the current record's "blog_tag_id" value
 * @method BlogPost         getBlogPost()     Returns the current record's "BlogPost" value
 * @method BlogTag          getBlogTag()      Returns the current record's "BlogTag" value
 * @method BlogPost2BlogTag setBlogPostId()   Sets the current record's "blog_post_id" value
 * @method BlogPost2BlogTag setBlogTagId()    Sets the current record's "blog_tag_id" value
 * @method BlogPost2BlogTag setBlogPost()     Sets the current record's "BlogPost" value
 * @method BlogPost2BlogTag setBlogTag()      Sets the current record's "BlogTag" value
 * 
 * @package    cms
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseBlogPost2BlogTag extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('blog_post2_blog_tag');
        $this->hasColumn('blog_post_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
        $this->hasColumn('blog_tag_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('BlogPost', array(
             'local' => 'blog_post_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('BlogTag', array(
             'local' => 'blog_tag_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}