<?php

/**
 * Microtask
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    cms
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Microtask extends BaseMicrotask
{
	
	const STATUS_SUCCESS = 'success';
	const STATUS_NEW = 'new';
	
	public function getStatusCssClass() {
		if($this->getIsBlocker()){
			return 'danger';
		}
		$classes = array(
			'new' => 'success',
			'success' => 'primary'
		);
		return $classes[$this->getStatus()];
	}
	
	public function fromPreset($Preset){
		$this->setDescription($Preset->getDescription());
		switch($Preset->getType()){
			case 'up':
				$max_pr = MicrotaskTable::getDashboardQuery('m')
					->select('MAX(m.priority)')
					->setHydrationMode(Doctrine::HYDRATE_SINGLE_SCALAR)
					->execute()
					;
				
				$this->setPriority($max_pr ? $max_pr + 1 : 1);
				break;
			case 'blocker':
				$this->setIsBlocker(true);
				break;		
		}
		return $this;
	}
	
	public function getReplacements(){
		return array(
			'User' => $this->getUser()->__toString()
		);
	}
	
	public function isYoung() {
		return strtotime($this->getCreatedAt()) + 60 * MyConfig::getInteger('microtask_minimum_lifetime') > time();
	}
}